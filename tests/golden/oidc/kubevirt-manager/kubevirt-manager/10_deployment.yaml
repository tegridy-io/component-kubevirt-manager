apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: kubevirt-manager
    kubevirt-manager.io/version: 1.3.2
  name: kubevirt-manager
  namespace: syn-kubevirt-manager
spec:
  minReadySeconds: 30
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kubevirt-manager
      kubevirt-manager.io/version: 1.3.2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubevirt-manager
        kubevirt-manager.io/version: 1.3.2
    spec:
      containers:
        - args: []
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              value: my-oic-client-id
            - name: OAUTH2_PROXY_CLIENT_SECRET
              value: t-silent-test-1234/c-green-test-1234/kubevirt-manager/clientSecret
            - name: OAUTH2_PROXY_COOKIE_SECRET
              value: t-silent-test-1234/c-green-test-1234/kubevirt-manager/cookieSecret
            - name: OAUTH2_PROXY_EMAIL_DOMAINS
              value: '*'
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: http://0.0.0.0:4180
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              value: ''
            - name: OAUTH2_PROXY_PROVIDER
              value: oidc
            - name: OAUTH2_PROXY_PROVIDER_DISPLAY_NAME
              value: OIDC
            - name: OAUTH2_PROXY_REDIRECT_URL
              value: https://kubevirt.local/oauth2/callback
            - name: OAUTH2_PROXY_UPSTREAMS
              value: http://localhost:8080
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
          imagePullPolicy: IfNotPresent
          name: oauth-proxy
          ports:
            - containerPort: 4180
              name: http
          stdin: false
          tty: false
          volumeMounts: []
        - args: []
          env: []
          image: docker.io/kubevirtmanager/kubevirt-manager:1.3.2
          imagePullPolicy: IfNotPresent
          name: kubevirt-manager
          ports: []
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 30000
            runAsUser: 10000
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /var/cache/nginx
              name: cache
            - mountPath: /var/run
              name: run
      imagePullSecrets: []
      initContainers: []
      restartPolicy: Always
      serviceAccountName: kubevirt-manager
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: cache
        - emptyDir: {}
          name: run
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kubevirt-manager
    app.kubernetes.io/managed-by: commodore
    kubevirt-manager.io/version: 1.3.2
  name: kubevirt-manager
  namespace: syn-kubevirt-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: commodore
    kubevirt-manager.io/version: 1.3.2
  name: kubevirt-manager
rules:
  - apiGroups:
      - ''
    resources:
      - nodes
      - namespaces
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - persistentvolumeclaims
      - persistentvolumes
      - services
      - secrets
      - serviceaccounts
      - configmaps
      - deployments
    verbs:
      - '*'
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - '*'
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
  - apiGroups:
      - k8s.cni.cncf.io
    resources:
      - network-attachment-definitions
    verbs:
      - get
      - list
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachines
      - virtualmachineinstances
    verbs:
      - '*'
  - apiGroups:
      - subresources.kubevirt.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - update
      - patch
  - apiGroups:
      - instancetype.kubevirt.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - cdi.kubevirt.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - pool.kubevirt.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - scheduling.k8s.io
    resources:
      - priorityclasses
    verbs:
      - get
      - list
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - '*'
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - clusters
      - machinedeployments
    verbs:
      - '*'
  - apiGroups:
      - controlplane.cluster.x-k8s.io
    resources:
      - kubeadmcontrolplanes
    verbs:
      - '*'
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - kubevirtmachinetemplates
      - kubevirtclusters
    verbs:
      - '*'
  - apiGroups:
      - bootstrap.cluster.x-k8s.io
    resources:
      - kubeadmconfigtemplates
    verbs:
      - '*'
  - apiGroups:
      - addons.cluster.x-k8s.io
    resources:
      - clusterresourcesets
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kubevirt-manager
    app.kubernetes.io/managed-by: commodore
    kubevirt-manager.io/version: 1.3.2
  name: kubevirt-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevirt-manager
subjects:
  - kind: ServiceAccount
    name: kubevirt-manager
    namespace: syn-kubevirt-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: commodore
    kubevirt-manager.io/version: 1.3.2
  name: kubevirt-manager-kccm
rules:
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachines
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachineinstances
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kubevirt-manager
    app.kubernetes.io/managed-by: commodore
    kubevirt-manager.io/version: 1.3.2
  name: kubevirt-manager-kccm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevirt-manager-kccm
subjects:
  - kind: ServiceAccount
    name: kubevirt-manager
    namespace: syn-kubevirt-manager
